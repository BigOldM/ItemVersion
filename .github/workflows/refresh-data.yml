name: Refresh Data

on:
  workflow_dispatch:
  schedule:
    # run on tuesdays at 16:00 UTC (1 hour after wow weekly reset)
    # runs on the last commit on the default branch
    - cron: "0 16 * * 2"

jobs:
  refresh:
    name: Refresh item data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout scrape code
        uses: actions/checkout@v3
        with:
          repository: t-mart/item-version-scrape
          token: ${{ secrets.GH_PAT }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm" # this is why pnpm setup goes first. will fail otherwise

      - name: Install dependencies
        run: pnpm install

      - name: Refresh Data.lua
        run: pnpm main

      - name: Upload generated lua artifact
        uses: actions/upload-artifact@v3
        with:
          name: Data.lua
          path: Data.lua

  Release:
    name: Release
    runs-on: ubuntu-latest
    needs: refresh
    steps:
      - name: Checkout addon code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed to get last tag, used for version bumping during release
          persist-credentials: false # ensure that later push uses PAT https://github.com/orgs/community/discussions/26460#discussioncomment-3251996

      - name: Download generated lua artifact
        uses: actions/download-artifact@v3
        with:
          name: Data.lua
          path: ItemVersion/

      - name: Check Lua
        uses: nebularg/actions-luacheck@v1
        with:
          args: --no-color

      - name: Git Commit
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add ItemVersion/Data.lua
          git commit -m "Refresh item data"

      - name: Release
        uses: ./.github/actions/release
        with:
          wap-upload-type: release
          github-token: ${{ secrets.GH_PAT }}
          curseforge-token: ${{ secrets.CF_API_KEY }}
