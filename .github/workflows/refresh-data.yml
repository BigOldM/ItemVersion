name: Refresh Data

# jobs
# 1. run scrape from item-version-scrape
#   - output to dist/Data.lua and upload artifact
#   - if cache has been updated, make a commit and push to that repo
# 2. incorporate new Data.lua
#   - download artifact
#   - make commit and push
# 3. run release workflow

on:
  workflow_dispatch:
  schedule:
    # run on tuesdays at 16:00 UTC (1 hour after wow weekly reset)
    # runs on the last commit on the default branch
    - cron: "0 16 * * 2"

jobs:
  scrape:
    name: Scrape
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: "t-mart/item-version-scrape"
          token: ${{ secrets.GH_PAT }}

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry install

      - name: Scrape
        run: |
          poetry run ivs scrape

      - uses: actions/upload-artifact@v3
        with:
          name: Data.lua
          path: dist/Data.lua

      - name: Check if cache updated
        id: cache-updated
        run: |
          git diff --exit-code ./cache
          echo "CACHE_UPDATED=$?" >> $GITHUB_OUTPUT

      - name: Commit
        if: steps.cache-updated.outputs.CACHE_UPDATED == '1'
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add ./cache
          git commit -m "Update cache"
          git push origin "${{ github.ref_name }}"

  commit:
    name: Commit new item data
    runs-on: ubuntu-latest
    needs: scrape
    outputs:
      refreshed-data-git-ref: ${{ steps.get-refreshed-data-git-ref.outputs.git-ref }}
    steps:
      - name: Checkout addon code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Clear old data
        run: |
          rm ItemVersion/Data.lua

      - name: Download generated lua artifact
        uses: actions/download-artifact@v3
        with:
          name: Data.lua
          path: ItemVersion/

      - name: Commit and push
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add ItemVersion/Data.lua
          git commit -m "Refresh item data"
          git push origin "${{ github.ref_name }}"

      - name: Output updated git ref
        id: get-refreshed-data-git-ref
        run: |
          echo "git-ref=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  release:
    needs: commit
    uses: ./.github/workflows/release.yml
    with:
      git-ref: ${{ needs.commit.outputs.refreshed-data-git-ref }}
      release-type: "beta"  #TODO change me to release when bugs worked out
    secrets: inherit
